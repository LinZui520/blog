// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement()) @map("id")
  avatar        String         @default("default.png") @map("avatar")
  username      String         @unique @map("username")
  email         String         @unique @map("email")
  password      String         @map("password")
  power         Int            @default(0) @map("power")
  register      DateTime       @map("register")
  login         DateTime       @map("login")
  Articles      Article[]
  Comments      Comment[]
  Images        Image[]
  Messages      Message[]
  Conversations Conversation[]

  @@map("users")
}

model Article {
  id       Int       @id @default(autoincrement()) @map("id")
  author   Int       @map("author")
  title    String    @map("title")
  content  String?   @map("content")
  create   DateTime  @map("create")
  update   DateTime  @map("update")
  User     User      @relation(fields: [author], references: [id])
  Comments Comment[]

  @@map("articles")
}

model Comment {
  id      Int      @id @default(autoincrement()) @map("id")
  author  Int      @map("author")
  article Int      @map("article")
  content String   @map("content")
  create  DateTime @map("create")
  User    User     @relation(fields: [author], references: [id])
  Article Article  @relation(fields: [article], references: [id])

  @@map("comments")
}

model Image {
  id       Int      @id @default(autoincrement()) @map("id")
  author   Int      @map("author")
  filename String   @map("filename")
  create   DateTime @map("create")
  User     User     @relation(fields: [author], references: [id])

  @@map("images")
}

model Message {
  id      Int      @id @default(autoincrement()) @map("id")
  author  Int      @map("author")
  content String   @map("content")
  create  DateTime @map("create")
  User    User     @relation(fields: [author], references: [id])

  @@map("messages")
}

model Conversation {
  id      Int      @id @default(autoincrement()) @map("id")
  author  Int      @map("author")
  content String   @map("content")
  create  DateTime @map("create")
  User    User     @relation(fields: [author], references: [id])

  @@map("conversations")
}
